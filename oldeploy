---
- name: Perform Maven build
  hosts: n1
  become: yes
  vars:
    jenkins_workspace: "/home/ec2-user/workspace/JenkinsAnsible"
    java_home: "/usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre"
    m2_home: "/opt/apache-maven-3.8.8"
    app_name: "WebAppCal"  # Define your application name here
    war_file_path: "{{ jenkins_workspace }}/target/{{ app_name }}-0.0.7.war"
  
  tasks:
    - name: Ensure Jenkins workspace directory exists
      ansible.builtin.file:
        path: "{{ jenkins_workspace }}"
        state: directory

    - name: Run Maven build
      ansible.builtin.shell:
        cmd: mvn clean package
        chdir: "{{ jenkins_workspace }}"
      environment:
        JAVA_HOME: "{{ java_home }}"
        M2_HOME: "{{ m2_home }}"
        PATH: "{{ java_home }}/bin:{{ m2_home }}/bin:{{ ansible_env.PATH }}"
      register: build_result

    - name: Show Maven build result
      ansible.builtin.debug:
        msg: |
          Maven Build Result:
          {{ build_result.stdout }}
          Error Output:
          {{ build_result.stderr }}

    - name: Save WAR file path to a file
      ansible.builtin.copy:
        content: "{{ war_file_path }}"
        dest: /tmp/war_file_path.txt
      when: build_result.rc == 0  # Only save if the build was successful



---
- name: Test Java Web Application
  hosts: n1
  become: yes
  vars:
    jenkins_workspace: "/home/ec2-user/workspace/JenkinsAnsible"
    war_file: "/home/ec2-user/workspace/JenkinsAnsible/target/WebAppCal-0.0.7.war"
    java_home: "/usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre"  # Update with the correct path to your Java installation
    m2_home: "/opt/apache-maven-3.8.8"       # Update with the correct path to your Maven installation

  tasks:
    - name: Ensure test workspace directory exists
      ansible.builtin.file:
        path: "{{ jenkins_workspace }}"
        state: directory

    - name: Check if WAR file exists
      ansible.builtin.stat:
        path: "{{ war_file }}"
      register: war_file_stat

    - name: Fail if WAR file does not exist
      ansible.builtin.fail:
        msg: "WAR file not found: {{ war_file }}"
      when: not war_file_stat.stat.exists

    - name: Run Maven tests
      ansible.builtin.shell:
        cmd: mvn test
        chdir: "{{ jenkins_workspace }}"
      environment:
        JAVA_HOME: "{{ java_home }}"
        M2_HOME: "{{ m2_home }}"
        PATH: "{{ java_home }}/bin:{{ m2_home }}/bin:{{ ansible_env.PATH }}"
      register: test_result

    - name: Show Maven test result
      ansible.builtin.debug:
        msg: |
          Maven Test Result:
          {{ test_result.stdout }}
          Error Output:
          {{ test_result.stderr }}




---
- name: Transfer WAR file path to deployment servers
  hosts: n1
  become: yes
  vars:
    war_file_path_file: "/tmp/war_file_path.txt"
    transfer_file_path: "/tmp/war_file_path.txt"
  
  tasks:
    - name: Ensure /tmp directory exists on build server
      ansible.builtin.file:
        path: "/tmp"
        state: directory

    - name: Check if WAR file path file exists on build server
      ansible.builtin.stat:
        path: "{{ war_file_path_file }}"
      register: war_file_path_stat

    - name: Fail if WAR file path file does not exist
      ansible.builtin.fail:
        msg: "WAR file path file not found: {{ war_file_path_file }}"
      when: not war_file_path_stat.stat.exists

    - name: Fetch WAR file path from build server
      ansible.builtin.fetch:
        src: "{{ war_file_path_file }}"
        dest: "{{ transfer_file_path }}"
        flat: yes

    - name: Ensure /tmp directory exists on deployment servers
      ansible.builtin.file:
        path: "/tmp"
        state: directory
      delegate_to: "{{ item }}"
      with_items:
        - n3
        - n4
        - n5

    - name: Transfer WAR file path to deployment servers
      ansible.builtin.copy:
        src: "{{ transfer_file_path }}"
        dest: "/tmp/war_file_path.txt"
      delegate_to: "{{ item }}"
      with_items:
        - n3
        - n4
        - n5




---
- name: Fetch and Transfer WAR file to deployment servers
  hosts: n1
  become: yes
  vars:
    war_file_path: "/home/ec2-user/workspace/JenkinsAnsible/target/WebAppCal-0.0.7.war"
    local_temp_war_file_path: "/tmp/WebAppCal-0.0.7.war"
  
  tasks:
    - name: Ensure /tmp directory exists on build server
      ansible.builtin.file:
        path: "/tmp"
        state: directory

    - name: Fetch WAR file from build server to Ansible controller
      ansible.builtin.fetch:
        src: "{{ war_file_path }}"
        dest: "{{ local_temp_war_file_path }}"
        flat: yes

    - name: Ensure /opt/tomcat/webapps directory exists on deployment servers
      ansible.builtin.file:
        path: "/opt/tomcat/webapps"
        state: directory
        owner: tomcat
        group: tomcat
        mode: '0755'
      delegate_to: "{{ item }}"
      with_items:
        - n3
        - n4
        - n5

    - name: Transfer WAR file to deployment servers
      ansible.builtin.copy:
        src: "{{ local_temp_war_file_path }}"
        dest: "/opt/tomcat/webapps"
        owner: tomcat
        group: tomcat
        mode: '0644'
      delegate_to: "{{ item }}"
      with_items:
        - n3
        - n4
        - n5



================================================================

---
- name: Transfer WAR file path to deployment servers
  hosts: n1
  become: yes
  vars:
    war_file_path_file: "/tmp/war_file_path.txt"
    transfer_file_path: "/tmp/war_file_path.txt"
  
  tasks:
    - name: Ensure /tmp directory exists on build server
      ansible.builtin.file:
        path: "/tmp"
        state: directory

    - name: Check if WAR file path file exists on build server
      ansible.builtin.stat:
        path: "{{ war_file_path_file }}"
      register: war_file_path_stat

    - name: Fail if WAR file path file does not exist
      ansible.builtin.fail:
        msg: "WAR file path file not found: {{ war_file_path_file }}"
      when: not war_file_path_stat.stat.exists

    - name: Fetch WAR file path from build server
      ansible.builtin.fetch:
        src: "{{ war_file_path_file }}"
        dest: "{{ transfer_file_path }}"
        flat: yes

    - name: Ensure /tmp directory exists on deployment servers
      ansible.builtin.file:
        path: "/tmp"
        state: directory
      delegate_to: "{{ item }}"
      with_items:
        #- n3
        - n4
        #- n5

    - name: Transfer WAR file path to deployment servers
      ansible.builtin.copy:
        src: "{{ transfer_file_path }}"
        dest: "/tmp/war_file_path.txt"
      delegate_to: "{{ item }}"
      with_items:
        #- n3
        - n4
        #- n5
======================================================================

---
- name: Deploy Java Web Application
  hosts: n4
  become: yes
  vars:
    tomcat_service_name: "tomcat"  # Adjust based on the actual service name
    war_file_path: "/tmp/war_file_path.txt"

  tasks:
    - name: Ensure /tmp directory exists
      ansible.builtin.file:
        path: "/tmp"
        state: directory

    - name: Fetch WAR file path from deployment server
      ansible.builtin.slurp:
        src: "{{ war_file_path }}"
      register: war_file_path_content

    - name: Decode and save WAR file path
      ansible.builtin.copy:
        content: "{{ war_file_path_content.content | b64decode }}"
        dest: "/tmp/war_file_path.txt"

    - name: Ensure Tomcat is stopped
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        state: stopped

    - name: Deploy WAR file to Tomcat
      ansible.builtin.copy:
        src: "{{ ansible_env.HOME }}/workspace/JenkinsAnsible/target/WebAppCal-0.0.7.war"
        dest: "/opt/tomcat/webapps/"  # Adjust the path based on your Tomcat installation

    - name: Ensure Tomcat is started
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        state: started

    - name: Verify deployment
      ansible.builtin.uri:
        url: "http://localhost:8080/WebAppCal-0.0.7"
        method: GET
        status_code: 200
      register: deploy_status

    - name: Fail if deployment verification fails
      ansible.builtin.fail:
        msg: "Deployment verification failed for WebAppCal."
      when: deploy_status.status != 200





