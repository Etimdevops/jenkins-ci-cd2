---
- name: Manage Tomcat service
  hosts: deploy
  become: yes
  tasks:
    - name: Ensure Tomcat service file is present
      ansible.builtin.copy:
        dest: "/etc/systemd/system/tomcat.service"
        content: |
          [Unit]
          Description=Apache Tomcat Web Application Container
          After=network.target

          [Service]
          Type=forking
          User=tomcat
          Group=tomcat
          Environment="CATALINA_PID=/opt/tomcat/temp/tomcat.pid"
          Environment="CATALINA_HOME=/opt/tomcat"
          Environment="CATALINA_BASE=/opt/tomcat"
          Environment="JAVA_OPTS=-Xms512M -Xmx1024M"
          ExecStart=/opt/tomcat/bin/startup.sh
          ExecStop=/opt/tomcat/bin/shutdown.sh
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
        mode: '0644'
      notify:
        - Reload systemd

    - name: Reload systemd to pick up new Tomcat service file
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Ensure Tomcat service is started and enabled
      ansible.builtin.systemd:
        name: tomcat
        state: started
        enabled: yes
      register: tomcat_service
      ignore_errors: yes

    - name: Collect Tomcat service status
      ansible.builtin.command:
        cmd: systemctl status tomcat.service
      register: tomcat_status_output
      failed_when: false

    - name: Collect journal logs if Tomcat failed to start
      ansible.builtin.command:
        cmd: journalctl -u tomcat.service --since "10 minutes ago"
      register: tomcat_journal_logs
      failed_when: false
      when: tomcat_service.failed

    - name: Output Tomcat status
      ansible.builtin.debug:
        msg: |
          Tomcat service status on {{ inventory_hostname }}:
          {{ tomcat_status_output.stdout }}
          {% if tomcat_service.failed %}
          Journal logs:
          {{ tomcat_journal_logs.stdout }}
          {% endif %}
